---
- name: Create network class only
  hosts: cc
  gather_facts: no
  vars_files:
    - ../vars/cc.yml
  vars:
    dp_ip:
      - "10.105.192.32"
      # - "10.105.192.33"
    netclasses:
      - name: "egor_test_net"
        groups:
          - { address: "10.10.10.0", mask: "255.255.255.0" }
          - { address: "10.10.11.0", mask: "255.255.255.0" }
          - { address: "10.10.12.0", mask: "255.255.255.0" }
          - { address: "10.10.13.0", mask: "255.255.255.0" }
      # - name: "egor_test_net2"
      #   groups:
      #     - { address: "192.168.1.0", mask: "255.255.255.0" }
      #     - { address: "192.168.2.0", mask: "255.255.255.0" }
      #     - { address: "192.168.3.0", mask: "255.255.255.0" }
      #     - { address: "192.168.4.0", mask: "255.255.255.0" }
      #     - { address: "192.168.5.0", mask: "255.255.255.0" }
      #     - { address: "192.168.6.0", mask: "255.255.255.0" }

  tasks:
    - block:
        - name: Lock device(s)
          dp_lock:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"

        - name: Build all device/class/group combinations (device-major order)
          set_fact:
            all_pairs: >-
              {{
                dp_ip
                | product(netclasses | subelements('groups'))
                | map('flatten')
                | map('flatten')
                | list
              }}

        - name: Create network groups for all netclasses on all devices (device-major order)
          loop: "{{ all_pairs }}"
          loop_control:
            label: "{{ item.0 }}/{{ item.1.name }}/{{ item.2.address }}/{{ item.2.mask }}"
          create_network_class:
            provider: "{{ cc }}"
            dp_ip: "{{ item.0 }}"
            class_name: "{{ item.1.name }}"
            address: "{{ item.2.address }}"
            mask: "{{ item.2.mask }}"
            index: "{{ (item.1.groups | map(attribute='address') | list).index(item.2.address) }}"
      always:
        - name: Unlock device(s)
          dp_unlock:
            provider: "{{ cc }}"
            dp_ip: "{{ item }}"
          loop: "{{ dp_ip }}"
